dist: xenial

branches:
  only:
    - master

language: c
cache:
  - ccache
  - pip
  - directories:
    - /opt/python

matrix:
  include:
    - os: linux
      env: PYENV_VERSION=3.6.4
    - os: linux
      env: PYENV_VERSION=3.7.0
    - os: linux
      env: PYENV_VERSION=3.8.0
    - os: osx
      env: PYENV_VERSION=3.6.4
    - os: osx
      env: PYENV_VERSION=3.7.0
    - os: osx
      env: PYENV_VERSION=3.8.0

before_install:
  - |
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        sudo apt-get update;
        sudo apt-get install libzmq3-dev libczmq-dev libczmq4 libzmq5;
        pushd /opt/pyenv;
        git pull origin master;
        popd;
        git clone --single-branch --branch master git://github.com/zeromq/zyre.git $HOME/zyre;
        cd $HOME/zyre;
        git checkout v2.0.0
        ./autogen.sh;
        ./configure;
        make
        make check || true;
        sudo make install;
        which ldconfig && sudo ldconfig;
        sudo pip install pipenv;
      fi
  - |
      if [ "$TRAVIS_OS_NAME" = "osx" ]; then
        brew update;
        brew install zeromq czmq zyre ccache;
        pip install pipenv;
        export PATH="/usr/local/opt/ccache/libexec:$PATH";
        ulimit -n 1200;
      fi

install:
#  - git clone --single-branch --branch master git://github.com/zeromq/libzmq.git $HOME/libzmq;
#  - cd $HOME/libzmq;
#  - ./autogen.sh;
#  - ./configure;
#  - make
#  - make check || true;
#  - sudo make install;
#  - which ldconfig && sudo ldconfig;
#
#  - git clone --single-branch --branch master git://github.com/zeromq/czmq.git $HOME/czmq;
#  - cd $HOME/czmq;
#  - ./autogen.sh;
#  - ./configure;
#  - make
#  - make check || true;
#  - sudo make install;
#  - which ldconfig && sudo ldconfig;
#
#  - git clone --single-branch --branch master git://github.com/zeromq/zyre.git $HOME/zyre;
#  - cd $HOME/zyre;
#  - ./autogen.sh;
#  - ./configure;
#  - make
#  - make check || true;
#  - sudo make install;
#  - which ldconfig && sudo ldconfig;

  - cd $TRAVIS_BUILD_DIR
  - pyenv install $PYENV_VERSION --skip-existing;
  - pipenv install --dev --python $(pyenv prefix $PYENV_VERSION)/bin/python;
  - pipenv run python setup.py clean
  - pipenv run python setup.py build
  - pipenv run python setup.py install

script:
  - pipenv run python tests/__init__.py